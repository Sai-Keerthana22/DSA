///Sort List

class Solution {
    public ListNode sortList(ListNode head) {
        if(head==null||head.next==null)return head;
        ListNode middle=mid(head);
        ListNode leftNode=head,rightNode=middle.next;
        middle.next=null;
        leftNode=sortList(leftNode);
        rightNode=sortList(rightNode);
        return merge(leftNode,rightNode);
    }
    public ListNode mid(ListNode head){
        if(head==null||head.next==null)return head;
        ListNode fast=head.next,slow=head;
        while(fast!=null && fast.next!=null){
            fast=fast.next.next;
            slow=slow.next;
        }
        return slow;
    }
    public ListNode merge(ListNode list1, ListNode list2) {
        ListNode a=new ListNode(-1);
        ListNode temp=a;
        while(list1!=null&&list2!=null){
            if(list1.val<=list2.val){
                temp.next=list1;
                list1=list1.next;
            }else{
                temp.next=list2;
                list2=list2.next;
            }
            temp=temp.next;
        }
        if(list1!=null){
            temp.next=list1;
        }
        if(list2!=null){
            temp.next=list2;
        }
        return a.next;
    }
}
